# needs a json with {"applyID": "50"} in it

main:
  params: [args]
  steps:
    - initGetApplyIDVar:
        assign:
          - GetApplyURL: ${"http://34.79.160.103:5001/applications/" + args.applyID}
    - checkApply:
        call: http.get
        args:
          url: ${GetApplyURL}
        result: GetApplyDetailsRes
    - initGetAptIDVar:
        assign:
          - GetAptURL: ${"http://34.79.160.103:5003/apartments/" + GetApplyDetailsRes.body.apartment_id}
    - checkApt:
        call: http.get
        args:
          url: ${GetAptURL}
        result: GetAptDetailsRes
    - conditionalOnAvailability:
        switch:
          - condition: ${GetAptDetailsRes.body.status.status == "occupied"}
            steps:
              - rejectApplication:
                  return: ${"Sorry, Apartment is unavailable."}
        next: initGetWaitingListVar
    - initGetWaitingListVar:
        assign:
          - GetWaitingListURL: ${"http://34.79.160.103:5002/waitingList"}
    - checkWaitingList:
        call: http.get
        args:
          url: ${GetWaitingListURL}
        result: GetWaitingListRes
    - conditionalOnWaitingList:
        switch:
          - condition: ${json.decode(GetWaitingListRes.body)[0].application_id != args.applyID}
            steps:
              - rejectWaitingList:
                  return: ${"Sorry, not first on waitinglist."}
        next: acceptWaitingList
    - acceptWaitingList:
        return: ${"The apartment is yours!"}
